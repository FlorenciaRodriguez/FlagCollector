<Activity mc:Ignorable="sap sap2010 sads" x:Class="Ejercicio.Ejercicio"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:local="clr-namespace:Ejercicio"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Angulo" Type="InArgument(s:Int32[])" />
    <x:Property Name="Lateral" Type="InArgument(s:String[])" />
    <x:Property Name="Color" Type="InArgument(s:String[])" />
    <x:Property Name="Protocolo" Type="InArgument(s:Int32[])" />
    <x:Property Name="AparecePar" Type="InArgument(s:String[])" />
    <x:Property Name="Recorrido" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="Reporte" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="Sujeto" Type="InArgument(x:String)" />
    <x:Property Name="Radio" Type="InArgument(x:Int32)" />
    <x:Property Name="Escenario" Type="InArgument(s:Int32[])" />
    <x:Property Name="Agregar180" Type="InArgument(x:String)" />
    <x:Property Name="BanderasCircunferencia" Type="InArgument(scg:List(sd:PointF))" />
    <x:Property Name="Separacion" Type="InArgument(x:Int32)" />
    <x:Property Name="Evaluar" Type="InArgument(s:Int32[])" />
    <x:Property Name="Mostrar180" Type="InArgument(x:String)" />
    <x:Property Name="TrainingFlag" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Ejercicio.Ejercicio_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Drawing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Ejercicio</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID19" DisplayName="SetUp" sap2010:WorkflowViewState.IdRef="State_6">
        <State.Entry>
          <Sequence DisplayName="Inicializar Variables" sap2010:WorkflowViewState.IdRef="Sequence_71">
            <Assign DisplayName="Archivo de reporte" sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpReference x:TypeArguments="scg:List(x:String)">Reporte</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)">new List&lt;string&gt;()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Archivo de recorrido" sap2010:WorkflowViewState.IdRef="Assign_60">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpReference x:TypeArguments="scg:List(x:String)">Recorrido</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)">new List&lt;string&gt;()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Cantidad de banderas recolectadas del par" sap2010:WorkflowViewState.IdRef="Assign_61">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">IRecoleccion</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_62">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">BanderaNueva</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">BanderasCircunferencia.Count</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Cantidad de Iteraciones" sap2010:WorkflowViewState.IdRef="Assign_63">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">Iteracion</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Maximo de Iteraciones" sap2010:WorkflowViewState.IdRef="Assign_64">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">MaxIteracion</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">Angulo.Length</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Para capturar la bandera y pasar por la cruz" sap2010:WorkflowViewState.IdRef="Assign_65">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">Cercania</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:PointF">
                  <mca:CSharpReference x:TypeArguments="sd:PointF">Cruz</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:PointF">
                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(0,0)</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <If sap2010:WorkflowViewState.IdRef="If_43">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("P")</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_109">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(sd:PointF)">
                      <mca:CSharpReference x:TypeArguments="scg:List(sd:PointF)">PosicionCruz</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(sd:PointF)">
                      <mca:CSharpValue x:TypeArguments="scg:List(sd:PointF)">new List&lt;PointF&gt;()</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </State.Entry>
        <State.Exit>
          <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_72">
            <Assign DisplayName="Mesaje a Guardar" sap2010:WorkflowViewState.IdRef="Assign_67">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"Sujeto;" + Sujeto + "\n" + 
                "Radio;" + Radio.ToString() + "\n" + 
                "Hora Inicio;" + DateTime.Now.ToString()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_77">
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
              </InArgument>
            </WriteLine>
            <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5">
              <AddToCollection.Item>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                </InArgument>
              </AddToCollection.Item>
              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
              </InArgument>
            </AddToCollection>
          </Sequence>
        </State.Exit>
        <State.Transitions>
          <Transition DisplayName="Iniciar Experimento" sap2010:WorkflowViewState.IdRef="Transition_5">
            <Transition.Trigger>
              <Sequence DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_12">
                  <local:ReadString.Result>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                    </OutArgument>
                  </local:ReadString.Result>
                </local:ReadString>
                <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:PointF">
                          <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:PointF">
                          <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </Transition.Trigger>
            <Transition.To>
              <State x:Name="__ReferenceID1" DisplayName="Detenido" sap2010:WorkflowViewState.IdRef="State_5">
                <State.Entry>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49">
                    <Sequence DisplayName="Cargar Escena" sap2010:WorkflowViewState.IdRef="Sequence_48">
                      <If DisplayName="Cargar Escenario null" sap2010:WorkflowViewState.IdRef="If_18">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Iteracion.CompareTo(Escenario.Length)&lt;0 &amp;&amp; Escenario[Iteracion].Equals(0))||(Iteracion.CompareTo(Escenario.Length)&gt;=0)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_34">
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">"L{ \"id\":\"null\" }"</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                        </If.Then>
                        <If.Else>
                          <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_35">
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">"L{ \"id\":\""+Escenario[Iteracion]+"\" }"</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                        </If.Else>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="Ids Par de Banderas" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">idIzquierda</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">(new Random()).Next(0,BanderasCircunferencia.Count-1)</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <If sap2010:WorkflowViewState.IdRef="If_25">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(TrainingFlag.Equals("T")) &amp;&amp; (Iteracion.CompareTo(Angulo.Length) &lt; 0)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">idDerecha</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">
                                <mca:CSharpValue x:TypeArguments="x:Int32">(idIzquierda+(Angulo[Iteracion]/Separacion))%BanderasCircunferencia.Count</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <If sap2010:WorkflowViewState.IdRef="If_32">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("T")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_68">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"NroIteracion;" + Iteracion + "\n" + 
    "Angulo;" + Angulo[Iteracion] + "\n" + 
    "A Seleccionar;" + Lateral[Iteracion] + 
    "\n" + "Protocolo;" + Protocolo[Iteracion] + "\n" 
    + "AparecenDeAPares;" + AparecePar[Iteracion] + "\n" + "IdIzquierda;" + idIzquierda + "\nIzquierdaX;" + BanderasCircunferencia.ElementAt(idIzquierda).X + "\n" + "IzquierdaY;" + BanderasCircunferencia.ElementAt(idIzquierda).Y + "\n" + "IdDerecha;" + idDerecha + "\n" + "DerechaX;" + BanderasCircunferencia.ElementAt(idDerecha).X + "\n" + "DerechaY;" + BanderasCircunferencia.ElementAt(idDerecha).Y + "\n"</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <If sap2010:WorkflowViewState.IdRef="If_31">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Protocolo.Length) &lt; 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"NroIteracion;" + Iteracion + "\n" + 
 "Protocolo;" +  Protocolo[Iteracion]+ "\n"
+ "IdBandera;" + idIzquierda + 
"\nIdBanderaX;" + BanderasCircunferencia.ElementAt(idIzquierda).X + "\n"
+ "IdBanderaY;" + BanderasCircunferencia.ElementAt(idIzquierda).Y + "\n"</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"NroIteracion;" + Iteracion + "\n" + 
 "IdBandera;" + idIzquierda + 
"\nIdBanderaX;" + BanderasCircunferencia.ElementAt(idIzquierda).X + "\n"
+ "IdBanderaY;" + BanderasCircunferencia.ElementAt(idIzquierda).Y + "\n"</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                      <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_73">
                        <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_13">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                        <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_85">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";DET"</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_39">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                        <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_78">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </Sequence>
                      <If sap2010:WorkflowViewState.IdRef="If_35">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Iteracion.CompareTo(Lateral.Length) &lt; 0 &amp;&amp; Lateral[Iteracion].Equals("I")) || TrainingFlag.Equals("P")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Salida" sap2010:WorkflowViewState.IdRef="Sequence_84">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"IdCorrecta;" + idIzquierda + "\n" + "CorrectaX;" + BanderasCircunferencia.ElementAt(idIzquierda).X + "\n" + "CorrectaY;" + BanderasCircunferencia.ElementAt(idIzquierda).Y + "\n"</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_53">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                            <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_98">
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                              </InArgument>
                            </WriteLine>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <If sap2010:WorkflowViewState.IdRef="If_34">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Lateral.Length) &lt; 0 &amp;&amp; Lateral[Iteracion].Equals("D")</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Salida" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">"IdCorrecta;" + idDerecha + "\n" + "CorrectaX;" + BanderasCircunferencia.ElementAt(idDerecha).X + "\n" + "CorrectaY;" + BanderasCircunferencia.ElementAt(idDerecha).Y + "\n"</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_54">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                                <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_99">
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Bandera Correcta" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                <If sap2010:WorkflowViewState.IdRef="If_33">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Angulo.Length)&lt;0</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_95">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">idMedio</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">(idIzquierda + Angulo[Iteracion]/(Separacion*2))%BanderasCircunferencia.Count</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <Sequence DisplayName="Salida" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_96">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"IdCorrecta;" + idMedio + "\n" + "CorrectaX;" + BanderasCircunferencia.ElementAt(idMedio).X + "\n" + "CorrectaY;" + BanderasCircunferencia.ElementAt(idMedio).Y + "\n"</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_55">
                                    <AddToCollection.Item>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection>
                                  <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_100">
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                    </InArgument>
                                  </WriteLine>
                                </Sequence>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </Sequence>
                  </Sequence>
                </State.Entry>
                <State.Exit>
                  <Sequence DisplayName="Cartel comienzo de iteracion" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_74">
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Trial "+(int)(Iteracion+1)+" \" }"</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <Delay sap2010:WorkflowViewState.IdRef="Delay_12">
                      <InArgument x:TypeArguments="x:TimeSpan">
                        <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
                      </InArgument>
                    </Delay>
                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_75" Text="hide_question" />
                  </Sequence>
                </State.Exit>
                <State.Transitions>
                  <Transition DisplayName="Ir a Capturar" sap2010:WorkflowViewState.IdRef="Transition_4">
                    <Transition.Trigger>
                      <Sequence x:Name="__ReferenceID17" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_13">
                          <local:ReadString.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                            </OutArgument>
                          </local:ReadString.Result>
                        </local:ReadString>
                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_19">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:PointF">
                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:PointF">
                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Transition.Trigger>
                    <Transition.To>
                      <State x:Name="__ReferenceID13" DisplayName="Recolectando" sap2010:WorkflowViewState.IdRef="State_4">
                        <State.Entry>
                          <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_76">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";REC"</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_40">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                            <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_83">
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                              </InArgument>
                            </WriteLine>
                          </Sequence>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Recolecto bandera" sap2010:WorkflowViewState.IdRef="Transition_3">
                            <Transition.Trigger>
                              <Sequence x:Name="__ReferenceID16" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_14">
                                  <local:ReadString.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                    </OutArgument>
                                  </local:ReadString.Result>
                                </local:ReadString>
                                <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_6">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="sd:PointF">
                                          <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="sd:PointF">
                                          <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </Transition.Trigger>
                            <Transition.To>
                              <State x:Name="__ReferenceID14" DisplayName="Volviendo" sap2010:WorkflowViewState.IdRef="State_3">
                                <State.Exit>
                                  <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_77">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";RET"</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_41">
                                      <AddToCollection.Item>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection.Item>
                                      <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection>
                                    <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_86">
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                      </InArgument>
                                    </WriteLine>
                                  </Sequence>
                                </State.Exit>
                                <State.Transitions>
                                  <Transition DisplayName="Centro" sap2010:WorkflowViewState.IdRef="Transition_2">
                                    <Transition.Trigger>
                                      <Sequence x:Name="__ReferenceID12" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_15">
                                          <local:ReadString.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                            </OutArgument>
                                          </local:ReadString.Result>
                                        </local:ReadString>
                                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_9">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="sd:PointF">
                                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="sd:PointF">
                                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </Transition.Trigger>
                                    <Transition.To>
                                      <State x:Name="__ReferenceID18" DisplayName="Evaluando" sap2010:WorkflowViewState.IdRef="State_2">
                                        <State.Exit>
                                          <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_81">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";EVA"</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_42">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_88">
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                              </InArgument>
                                            </WriteLine>
                                          </Sequence>
                                        </State.Exit>
                                        <State.Transitions>
                                          <Transition DisplayName="Protocolo 1" sap2010:WorkflowViewState.IdRef="Transition_11">
                                            <Transition.Trigger>
                                              <Sequence x:Name="__ReferenceID4" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_17">
                                                  <local:ReadString.Result>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                    </OutArgument>
                                                  </local:ReadString.Result>
                                                </local:ReadString>
                                                <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_11">
                                                  <If.Condition>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                    </InArgument>
                                                  </If.Condition>
                                                  <If.Then>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="sd:PointF">
                                                          <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="sd:PointF">
                                                          <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </Transition.Trigger>
                                            <Transition.To>
                                              <State x:Name="__ReferenceID20" DisplayName="Protocolo 1" sap2010:WorkflowViewState.IdRef="State_7">
                                                <State.Entry>
                                                  <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_82">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";PR1"</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_43">
                                                      <AddToCollection.Item>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                        </InArgument>
                                                      </AddToCollection.Item>
                                                      <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                                      </InArgument>
                                                    </AddToCollection>
                                                    <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_89">
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                      </InArgument>
                                                    </WriteLine>
                                                  </Sequence>
                                                </State.Entry>
                                                <State.Transitions>
                                                  <Transition DisplayName="Eligio bandera" sap2010:WorkflowViewState.IdRef="Transition_23">
                                                    <Transition.Trigger>
                                                      <Sequence DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_19">
                                                          <local:ReadString.Result>
                                                            <OutArgument x:TypeArguments="x:String">
                                                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                            </OutArgument>
                                                          </local:ReadString.Result>
                                                        </local:ReadString>
                                                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_23">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                </InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </Transition.Trigger>
                                                    <Transition.To>
                                                      <State x:Name="__ReferenceID7" DisplayName="Termino Test de Memoria" sap2010:WorkflowViewState.IdRef="State_10">
                                                        <State.Entry>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                              <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"Hora Fin Seleccion;" + DateTime.Now.ToString() + "\n" +
                "Bandera Seleccionada [id];" + BanderaSeleccionadaID + "\n" +
                    "Bandera Seleccionada [X];" + BanderaSeleccionadaPos.X + "\n" +
                    "Bandera Seleccionada [Y];" + BanderaSeleccionadaPos.Y</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_34">
                                                                  <AddToCollection.Item>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </AddToCollection.Item>
                                                                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                                                  </InArgument>
                                                                </AddToCollection>
                                                                <WriteLine DisplayName="Consola" sap2010:WorkflowViewState.IdRef="WriteLine_96">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";PR3"</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_44">
                                                                  <AddToCollection.Item>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </AddToCollection.Item>
                                                                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                                                  </InArgument>
                                                                </AddToCollection>
                                                                <WriteLine DisplayName="Consola" sap2010:WorkflowViewState.IdRef="WriteLine_97">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                              </Sequence>
                                                              <Assign DisplayName="Aumentar iteracion" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">
                                                                    <mca:CSharpReference x:TypeArguments="x:Int32">Iteracion</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">
                                                                    <mca:CSharpValue x:TypeArguments="x:Int32">Iteracion+1</mca:CSharpValue>
                                                                  </InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="hide_question" />
                                                            </Sequence>
                                                            <If sap2010:WorkflowViewState.IdRef="If_38">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("P")</mca:CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                                  <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_102">
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Continuar Y(si) X(no)\" }"</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </WriteLine>
                                                                  <Delay sap2010:WorkflowViewState.IdRef="Delay_13">
                                                                    <InArgument x:TypeArguments="x:TimeSpan">
                                                                      <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Delay>
                                                                </Sequence>
                                                              </If.Then>
                                                            </If>
                                                          </Sequence>
                                                        </State.Entry>
                                                        <State.Transitions>
                                                          <Transition DisplayName="No seguir iternado" sap2010:WorkflowViewState.IdRef="Transition_18">
                                                            <Transition.Trigger>
                                                              <Sequence x:Name="__ReferenceID0" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                                <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_23">
                                                                  <local:ReadString.Result>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </local:ReadString.Result>
                                                                </local:ReadString>
                                                                <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_39">
                                                                  <If.Condition>
                                                                    <InArgument x:TypeArguments="x:Boolean">
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </If.Condition>
                                                                  <If.Then>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_98">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="sd:PointF">
                                                                          <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                        </OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="sd:PointF">
                                                                          <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                        </InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </Transition.Trigger>
                                                            <Transition.Condition>
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">(TrainingFlag.Equals("T") &amp;&amp; !(Iteracion.CompareTo(Angulo.Length - 1) &lt; 0)) || (TrainingFlag.Equals("P") &amp;&amp; RtaCave.Equals("1"))</mca:CSharpValue>
                                                            </Transition.Condition>
                                                            <Transition.To>
                                                              <State x:Name="__ReferenceID15" DisplayName="Fin" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                                                                <State.Entry>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_19">
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Fin del experimento\" }"</mca:CSharpValue>
                                                                      </InArgument>
                                                                    </WriteLine>
                                                                    <Delay sap2010:WorkflowViewState.IdRef="Delay_3">
                                                                      <InArgument x:TypeArguments="x:TimeSpan">
                                                                        <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
                                                                      </InArgument>
                                                                    </Delay>
                                                                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="hide_question" />
                                                                  </Sequence>
                                                                </State.Entry>
                                                              </State>
                                                            </Transition.To>
                                                          </Transition>
                                                          <Transition Trigger="{x:Reference __ReferenceID0}" DisplayName="Seguir Iterando" sap2010:WorkflowViewState.IdRef="Transition_17">
                                                            <Transition.To>
                                                              <State x:Name="__ReferenceID3" DisplayName="Ir a la Cruz" sap2010:WorkflowViewState.IdRef="State_12">
                                                                <State.Transitions>
                                                                  <Transition DisplayName="Llega a la cruz" sap2010:WorkflowViewState.IdRef="Transition_27">
                                                                    <Transition.Trigger>
                                                                      <Sequence x:Name="__ReferenceID2" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_24">
                                                                          <local:ReadString.Result>
                                                                            <OutArgument x:TypeArguments="x:String">
                                                                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </local:ReadString.Result>
                                                                        </local:ReadString>
                                                                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_41">
                                                                          <If.Condition>
                                                                            <InArgument x:TypeArguments="x:Boolean">
                                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </If.Condition>
                                                                          <If.Then>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_99">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="sd:PointF">
                                                                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                                </OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="sd:PointF">
                                                                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                                </InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </If.Then>
                                                                        </If>
                                                                      </Sequence>
                                                                    </Transition.Trigger>
                                                                    <Transition.To>
                                                                      <x:Reference>__ReferenceID1</x:Reference>
                                                                    </Transition.To>
                                                                    <Transition.Condition>
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("T") || (TrainingFlag.Equals("P")&amp;&amp;Math.Sqrt((Math.Pow(Coordenadas.X - Cruz.X, 2)) + Math.Pow(Coordenadas.Y - Cruz.Y, 2)) &lt; Cercania)</mca:CSharpValue>
                                                                    </Transition.Condition>
                                                                  </Transition>
                                                                  <Transition Trigger="{x:Reference __ReferenceID2}" DisplayName="No llego a la cruz" sap2010:WorkflowViewState.IdRef="Transition_28" To="{x:Reference __ReferenceID3}">
                                                                    <Transition.Condition>
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">(TrainingFlag.Equals("P"))&amp;&amp;!(Math.Sqrt((Math.Pow(Coordenadas.X - Cruz.X, 2)) + Math.Pow(Coordenadas.Y - Cruz.Y, 2)) &lt; Cercania)</mca:CSharpValue>
                                                                    </Transition.Condition>
                                                                  </Transition>
                                                                </State.Transitions>
                                                              </State>
                                                            </Transition.To>
                                                            <Transition.Action>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                                                                <If sap2010:WorkflowViewState.IdRef="If_30">
                                                                  <If.Condition>
                                                                    <InArgument x:TypeArguments="x:Boolean">
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Iteracion).CompareTo(Color.Length) &lt; 0) &amp;&amp; !(Color[Iteracion].Equals(Color[Iteracion-1]))</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </If.Condition>
                                                                  <If.Then>
                                                                    <Sequence DisplayName="Cambiar Color" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:Int32" Name="i" />
                                                                      </Sequence.Variables>
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">i</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <While sap2010:WorkflowViewState.IdRef="While_1">
                                                                        <While.Condition>
                                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">i&lt;BanderasCircunferencia.Count</mca:CSharpValue>
                                                                        </While.Condition>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                                          <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
                                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_67">
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(i) + "\", \"color\":\"" + Color[Iteracion] + "\" }"</mca:CSharpValue>
                                                                              </InArgument>
                                                                            </WriteLine>
                                                                          </Parallel>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">i</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpValue x:TypeArguments="x:Int32">i+1</mca:CSharpValue>
                                                                              </InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </While>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                                <If sap2010:WorkflowViewState.IdRef="If_42">
                                                                  <If.Condition>
                                                                    <InArgument x:TypeArguments="x:Boolean">
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("P")</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </If.Condition>
                                                                  <If.Then>
                                                                    <Sequence DisplayName="Cambiar Cruz" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                                      <Sequence DisplayName="Generar Cruz" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="s:Random" Name="RandomX" />
                                                                          <Variable x:TypeArguments="s:Random" Name="RandomY" />
                                                                          <Variable x:TypeArguments="x:String" Name="variable2" />
                                                                          <Variable x:TypeArguments="x:Int32" Name="CruzX" />
                                                                          <Variable x:TypeArguments="x:Int32" Name="CruzY" />
                                                                        </Sequence.Variables>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_100">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="s:Random">
                                                                              <mca:CSharpReference x:TypeArguments="s:Random">RandomX</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="s:Random">
                                                                              <mca:CSharpValue x:TypeArguments="s:Random">new Random()</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_101">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="s:Random">
                                                                              <mca:CSharpReference x:TypeArguments="s:Random">RandomY</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="s:Random">
                                                                              <mca:CSharpValue x:TypeArguments="s:Random">new Random()</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_102">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">
                                                                              <mca:CSharpReference x:TypeArguments="x:Int32">CruzX</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">
                                                                              <mca:CSharpValue x:TypeArguments="x:Int32">RandomX.Next(-13,13)</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_103">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">
                                                                              <mca:CSharpReference x:TypeArguments="x:Int32">CruzY</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">
                                                                              <mca:CSharpValue x:TypeArguments="x:Int32">RandomY.Next(-13, 13)</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <While sap2010:WorkflowViewState.IdRef="While_2">
                                                                          <While.Condition>
                                                                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Math.Sqrt(Math.Pow(Cruz.X-CruzX,2)+Math.Pow(Cruz.Y-CruzY,2))&lt;Cercania) || (PosicionCruz.Contains(new PointF(CruzX,CruzY)))</mca:CSharpValue>
                                                                          </While.Condition>
                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_96">
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_104">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Int32">
                                                                                  <mca:CSharpReference x:TypeArguments="x:Int32">CruzX</mca:CSharpReference>
                                                                                </OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Int32">
                                                                                  <mca:CSharpValue x:TypeArguments="x:Int32">RandomX.Next(-13,13)</mca:CSharpValue>
                                                                                </InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Int32">
                                                                                  <mca:CSharpReference x:TypeArguments="x:Int32">CruzY</mca:CSharpReference>
                                                                                </OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Int32">
                                                                                  <mca:CSharpValue x:TypeArguments="x:Int32">RandomY.Next(-13,13)</mca:CSharpValue>
                                                                                </InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </Sequence>
                                                                        </While>
                                                                        <AddToCollection x:TypeArguments="sd:PointF" sap2010:WorkflowViewState.IdRef="AddToCollection`1_56">
                                                                          <AddToCollection.Item>
                                                                            <InArgument x:TypeArguments="sd:PointF">
                                                                              <mca:CSharpValue x:TypeArguments="sd:PointF">Cruz</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </AddToCollection.Item>
                                                                          <InArgument x:TypeArguments="scg:ICollection(sd:PointF)">
                                                                            <mca:CSharpValue x:TypeArguments="scg:ICollection(sd:PointF)">PosicionCruz</mca:CSharpValue>
                                                                          </InArgument>
                                                                        </AddToCollection>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_106">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Single">
                                                                              <mca:CSharpReference x:TypeArguments="x:Single">Cruz.X</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Single">
                                                                              <mca:CSharpValue x:TypeArguments="x:Single">CruzX</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_107">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Single">
                                                                              <mca:CSharpReference x:TypeArguments="x:Single">Cruz.Y</mca:CSharpReference>
                                                                            </OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Single">
                                                                              <mca:CSharpValue x:TypeArguments="x:Single">CruzY</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Sequence DisplayName="Salida" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_108">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:String">
                                                                                <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <mca:CSharpValue x:TypeArguments="x:String">"CruzX;"+CruzX+"\nCruzY;"+CruzY</mca:CSharpValue>
                                                                              </InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <AddToCollection x:TypeArguments="x:String" DisplayName="AddToCollection&lt;String&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_57">
                                                                            <AddToCollection.Item>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                              </InArgument>
                                                                            </AddToCollection.Item>
                                                                            <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </AddToCollection>
                                                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_106">
                                                                            <InArgument x:TypeArguments="x:String">
                                                                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                            </InArgument>
                                                                          </WriteLine>
                                                                        </Sequence>
                                                                      </Sequence>
                                                                      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_104" Text="hide_question" />
                                                                      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_105">
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <mca:CSharpValue x:TypeArguments="x:String">"M{ \"x\":\""+Cruz.X+"\", \"y\":\""+Cruz.Y+"\" }"</mca:CSharpValue>
                                                                        </InArgument>
                                                                      </WriteLine>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </Transition.Action>
                                                            <Transition.Condition>
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">(TrainingFlag.Equals("P")&amp;&amp;RtaCave.Equals("2"))||(TrainingFlag.Equals("T")&amp;&amp;(Iteracion.CompareTo(Angulo.Length - 1) &lt; 0))</mca:CSharpValue>
                                                            </Transition.Condition>
                                                          </Transition>
                                                        </State.Transitions>
                                                      </State>
                                                    </Transition.To>
                                                    <Transition.Action>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                        <If sap2010:WorkflowViewState.IdRef="If_24">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("2")</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_86">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">Respuesta;SI</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <AddToCollection x:TypeArguments="x:String" DisplayName="Respuesta" sap2010:WorkflowViewState.IdRef="AddToCollection`1_51">
                                                                <AddToCollection.Item>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                  </InArgument>
                                                                </AddToCollection.Item>
                                                                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                                                </InArgument>
                                                              </AddToCollection>
                                                              <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_93">
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                </InArgument>
                                                              </WriteLine>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_87">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">Respuesta;NO</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <AddToCollection x:TypeArguments="x:String" DisplayName="Respuesta" sap2010:WorkflowViewState.IdRef="AddToCollection`1_52">
                                                                <AddToCollection.Item>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                  </InArgument>
                                                                </AddToCollection.Item>
                                                                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                                                </InArgument>
                                                              </AddToCollection>
                                                              <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_94">
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                </InArgument>
                                                              </WriteLine>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                        <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_57">
                                                          <InArgument x:TypeArguments="x:String">
                                                            <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" +BanderaSeleccionadaID + "\", \"visible\":\"false\" }"</mca:CSharpValue>
                                                          </InArgument>
                                                        </WriteLine>
                                                      </Sequence>
                                                    </Transition.Action>
                                                    <Transition.Condition>
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("1")||RtaCave.Equals("2")</mca:CSharpValue>
                                                    </Transition.Condition>
                                                  </Transition>
                                                </State.Transitions>
                                              </State>
                                            </Transition.To>
                                            <Transition.Action>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_51">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Escucha la pregunta\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <Delay sap2010:WorkflowViewState.IdRef="Delay_8">
                                                  <InArgument x:TypeArguments="x:TimeSpan">
                                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
                                                  </InArgument>
                                                </Delay>
                                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_52" Text="hide_question" />
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_53">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Y(si) o X(no)\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <If sap2010:WorkflowViewState.IdRef="If_22">
                                                  <If.Condition>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">Lateral[Iteracion].Equals("I")</mca:CSharpValue>
                                                    </InArgument>
                                                  </If.Condition>
                                                  <If.Then>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_54">
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idIzquierda+ "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                        </InArgument>
                                                      </WriteLine>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="sd:PointF">
                                                            <mca:CSharpReference x:TypeArguments="sd:PointF">BanderaSeleccionadaPos</mca:CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="sd:PointF">
                                                            <mca:CSharpValue x:TypeArguments="sd:PointF">BanderasCircunferencia.ElementAt(idIzquierda)</mca:CSharpValue>
                                                          </InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">
                                                            <mca:CSharpReference x:TypeArguments="x:Int32">BanderaSeleccionadaID</mca:CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">
                                                            <mca:CSharpValue x:TypeArguments="x:Int32">idIzquierda</mca:CSharpValue>
                                                          </InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If sap2010:WorkflowViewState.IdRef="If_21">
                                                      <If.Condition>
                                                        <InArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">Lateral[Iteracion].Equals("D")</mca:CSharpValue>
                                                        </InArgument>
                                                      </If.Condition>
                                                      <If.Then>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_55">
                                                            <InArgument x:TypeArguments="x:String">
                                                              <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idDerecha + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                            </InArgument>
                                                          </WriteLine>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sd:PointF">
                                                                <mca:CSharpReference x:TypeArguments="sd:PointF">BanderaSeleccionadaPos</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sd:PointF">
                                                                <mca:CSharpValue x:TypeArguments="sd:PointF">BanderasCircunferencia.ElementAt(idDerecha)</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">BanderaSeleccionadaID</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpValue x:TypeArguments="x:Int32">idDerecha</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_56">
                                                            <InArgument x:TypeArguments="x:String">
                                                              <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" +idMedio+ "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                            </InArgument>
                                                          </WriteLine>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sd:PointF">
                                                                <mca:CSharpReference x:TypeArguments="sd:PointF">BanderaSeleccionadaPos</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sd:PointF">
                                                                <mca:CSharpValue x:TypeArguments="sd:PointF">BanderasCircunferencia.ElementAt(idMedio)</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">BanderaSeleccionadaID</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpValue x:TypeArguments="x:Int32">idMedio</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </Transition.Action>
                                            <Transition.Condition>
                                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Protocolo.Length)&lt;0 &amp;&amp; Protocolo[Iteracion].Equals(1)</mca:CSharpValue>
                                            </Transition.Condition>
                                          </Transition>
                                          <Transition Trigger="{x:Reference __ReferenceID4}" DisplayName="Protocolo 2" sap2010:WorkflowViewState.IdRef="Transition_12">
                                            <Transition.To>
                                              <State x:Name="__ReferenceID5" DisplayName="Seleccionando Bandera" sap2010:WorkflowViewState.IdRef="State_8">
                                                <State.Entry>
                                                  <Sequence DisplayName="Cambiar color Bandera de Cursor" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_14">
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(Cursor) + "\", \"color\":\"azul\" }"</mca:CSharpValue>
                                                      </InArgument>
                                                    </WriteLine>
                                                  </Sequence>
                                                </State.Entry>
                                                <State.Exit>
                                                  <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_84">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";PR2"</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_49">
                                                      <AddToCollection.Item>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                        </InArgument>
                                                      </AddToCollection.Item>
                                                      <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                                      </InArgument>
                                                    </AddToCollection>
                                                    <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_91">
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                      </InArgument>
                                                    </WriteLine>
                                                  </Sequence>
                                                </State.Exit>
                                                <State.Transitions>
                                                  <Transition DisplayName="Seguir Seleccionando" sap2010:WorkflowViewState.IdRef="Transition_15">
                                                    <Transition.Trigger>
                                                      <Sequence x:Name="__ReferenceID6" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_11">
                                                          <local:ReadString.Result>
                                                            <OutArgument x:TypeArguments="x:String">
                                                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                            </OutArgument>
                                                          </local:ReadString.Result>
                                                        </local:ReadString>
                                                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_13">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                </InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </Transition.Trigger>
                                                    <Transition.To>
                                                      <x:Reference>__ReferenceID5</x:Reference>
                                                    </Transition.To>
                                                    <Transition.Action>
                                                      <Sequence DisplayName="Mover Cursor" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                        <If sap2010:WorkflowViewState.IdRef="If_27">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Color.Length)&lt;0</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_58">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(Cursor) + "\", \"color\":\"" + Color[Iteracion] + "\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Then>
                                                          <If.Else>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_17">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(Cursor) + "\", \"color\":\"rojo\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Else>
                                                        </If>
                                                        <If sap2010:WorkflowViewState.IdRef="If_15">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("1")</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <Sequence DisplayName="Mover Cursor" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">
                                                                    <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">
                                                                    <mca:CSharpValue x:TypeArguments="x:Int32">(Cursor - 1) % BanderasCircunferencia.Count</mca:CSharpValue>
                                                                  </InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <If sap2010:WorkflowViewState.IdRef="If_14">
                                                                <If.Condition>
                                                                  <InArgument x:TypeArguments="x:Boolean">
                                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Cursor&lt;0</mca:CSharpValue>
                                                                  </InArgument>
                                                                </If.Condition>
                                                                <If.Then>
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpValue x:TypeArguments="x:Int32">BanderasCircunferencia.Count-1</mca:CSharpValue>
                                                                      </InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </If.Then>
                                                              </If>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">
                                                                  <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">
                                                                  <mca:CSharpValue x:TypeArguments="x:Int32">(Cursor + 1) % BanderasCircunferencia.Count</mca:CSharpValue>
                                                                </InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Else>
                                                        </If>
                                                      </Sequence>
                                                    </Transition.Action>
                                                    <Transition.Condition>
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("1") || RtaCave.Equals("3")</mca:CSharpValue>
                                                    </Transition.Condition>
                                                  </Transition>
                                                  <Transition Trigger="{x:Reference __ReferenceID6}" DisplayName="Eligio bandera" sap2010:WorkflowViewState.IdRef="Transition_14" To="{x:Reference __ReferenceID7}">
                                                    <Transition.Action>
                                                      <Sequence DisplayName="Termino de elegir" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                        <If sap2010:WorkflowViewState.IdRef="If_29">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Color.Length)&lt;0</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_15">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(Cursor) + "\", \"color\":\"" + Color[Iteracion] + "\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Then>
                                                          <If.Else>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_60">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"C{ \"id\":\"" + (int)(Cursor) + "\", \"color\":\"rojo\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Else>
                                                        </If>
                                                        <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_16">
                                                          <InArgument x:TypeArguments="x:String">
                                                            <mca:CSharpValue x:TypeArguments="x:String">Mostrar180.Replace("true", "false")</mca:CSharpValue>
                                                          </InArgument>
                                                        </WriteLine>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="sd:PointF">
                                                              <mca:CSharpReference x:TypeArguments="sd:PointF">BanderaSeleccionadaPos</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="sd:PointF">
                                                              <mca:CSharpValue x:TypeArguments="sd:PointF">BanderasCircunferencia.ElementAt(Cursor)</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">
                                                              <mca:CSharpReference x:TypeArguments="x:Int32">BanderaSeleccionadaID</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">
                                                              <mca:CSharpValue x:TypeArguments="x:Int32">Cursor</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </Transition.Action>
                                                    <Transition.Condition>
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("2")</mca:CSharpValue>
                                                    </Transition.Condition>
                                                  </Transition>
                                                </State.Transitions>
                                              </State>
                                            </Transition.To>
                                            <Transition.Action>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_9">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Escucha la consigna\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <Delay sap2010:WorkflowViewState.IdRef="Delay_2">
                                                  <InArgument x:TypeArguments="x:TimeSpan">
                                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(4)</mca:CSharpValue>
                                                  </InArgument>
                                                </Delay>
                                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="hide_question" />
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_11">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"X(izq) Y(Sel) B(der)\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_12">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">Mostrar180</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                              </Sequence>
                                            </Transition.Action>
                                            <Transition.Condition>
                                              <mca:CSharpValue x:TypeArguments="x:Boolean">(Iteracion.CompareTo(Protocolo.Length) &lt; 0 &amp;&amp; Protocolo[Iteracion].Equals(2)) || (!(Iteracion.CompareTo(Protocolo.Length) &lt; 0)&amp;&amp;(TrainingFlag.Equals("P")))</mca:CSharpValue>
                                            </Transition.Condition>
                                          </Transition>
                                          <Transition Trigger="{x:Reference __ReferenceID4}" DisplayName="Protocolo 3" sap2010:WorkflowViewState.IdRef="Transition_13">
                                            <Transition.To>
                                              <State x:Name="__ReferenceID8" DisplayName="Colocando Bandera" sap2010:WorkflowViewState.IdRef="State_9">
                                                <State.Exit>
                                                  <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_85">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";PR3"</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_50">
                                                      <AddToCollection.Item>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                        </InArgument>
                                                      </AddToCollection.Item>
                                                      <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                                      </InArgument>
                                                    </AddToCollection>
                                                    <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_92">
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                      </InArgument>
                                                    </WriteLine>
                                                  </Sequence>
                                                </State.Exit>
                                                <State.Transitions>
                                                  <Transition DisplayName="Confirmar Posicion" sap2010:WorkflowViewState.IdRef="Transition_19">
                                                    <Transition.Trigger>
                                                      <Sequence x:Name="__ReferenceID11" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                        <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_21">
                                                          <local:ReadString.Result>
                                                            <OutArgument x:TypeArguments="x:String">
                                                              <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                            </OutArgument>
                                                          </local:ReadString.Result>
                                                        </local:ReadString>
                                                        <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_16">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="sd:PointF">
                                                                  <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                </InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </Transition.Trigger>
                                                    <Transition.To>
                                                      <State x:Name="__ReferenceID10" DisplayName="Confirmando Ubicacion" sap2010:WorkflowViewState.IdRef="State_11">
                                                        <State.Exit>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";CON"</mca:CSharpValue>
                                                                </InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_47">
                                                              <AddToCollection.Item>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                                </InArgument>
                                                              </AddToCollection.Item>
                                                              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                                                              </InArgument>
                                                            </AddToCollection>
                                                            <WriteLine DisplayName="Consola" sap2010:WorkflowViewState.IdRef="WriteLine_95">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </Sequence>
                                                        </State.Exit>
                                                        <State.Transitions>
                                                          <Transition DisplayName="Borrar Bandera" sap2010:WorkflowViewState.IdRef="Transition_21">
                                                            <Transition.Trigger>
                                                              <Sequence x:Name="__ReferenceID9" DisplayName="Recibir Coordenadas" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                                <local:ReadString BookmarkName="RtaCave" sap2010:WorkflowViewState.IdRef="ReadString_18">
                                                                  <local:ReadString.Result>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <mca:CSharpReference x:TypeArguments="x:String">RtaCave</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </local:ReadString.Result>
                                                                </local:ReadString>
                                                                <If DisplayName="Es un movimiento de joystick o apreto un boton" sap2010:WorkflowViewState.IdRef="If_17">
                                                                  <If.Condition>
                                                                    <InArgument x:TypeArguments="x:Boolean">
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Split(';').Length&gt;1</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </If.Condition>
                                                                  <If.Then>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="sd:PointF">
                                                                          <mca:CSharpReference x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpReference>
                                                                        </OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="sd:PointF">
                                                                          <mca:CSharpValue x:TypeArguments="sd:PointF">new PointF(Single.Parse(RtaCave.Split(';')[0].Replace(".", ",")), Single.Parse(RtaCave.Split(';')[1].Replace(".", ",")))</mca:CSharpValue>
                                                                        </InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </Transition.Trigger>
                                                            <Transition.To>
                                                              <x:Reference>__ReferenceID8</x:Reference>
                                                            </Transition.To>
                                                            <Transition.Action>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_63" Text="hide_question" />
                                                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_32">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + (int)(Cursor) + "\", \"visible\":\"false\" }"</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_64">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Pulsa Y en la posicion\" }"</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpValue x:TypeArguments="x:Int32">Cursor+1</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </Transition.Action>
                                                            <Transition.Condition>
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("1")</mca:CSharpValue>
                                                            </Transition.Condition>
                                                          </Transition>
                                                          <Transition Trigger="{x:Reference __ReferenceID9}" DisplayName="Eligio bandera" sap2010:WorkflowViewState.IdRef="Transition_22" To="{x:Reference __ReferenceID7}">
                                                            <Transition.Action>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_33">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + (int)(Cursor) + "\", \"visible\":\"false\" }"</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpReference x:TypeArguments="x:Int32">BanderaSeleccionadaID</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpValue x:TypeArguments="x:Int32">Cursor</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpReference x:TypeArguments="x:Int32">BanderaNueva</mca:CSharpReference>
                                                                    </OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Int32">
                                                                      <mca:CSharpValue x:TypeArguments="x:Int32">Cursor+1</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_73">
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <mca:CSharpValue x:TypeArguments="x:String">"N{ \"x\":\"0\", \"y\":\"0\", \"radius\":\""+Radio+"\" }"</mca:CSharpValue>
                                                                  </InArgument>
                                                                </WriteLine>
                                                              </Sequence>
                                                            </Transition.Action>
                                                            <Transition.Condition>
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("2")</mca:CSharpValue>
                                                            </Transition.Condition>
                                                          </Transition>
                                                          <Transition Trigger="{x:Reference __ReferenceID9}" DisplayName="Seguir Seleccionando" sap2010:WorkflowViewState.IdRef="Transition_26" To="{x:Reference __ReferenceID10}">
                                                            <Transition.Condition>
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">!(RtaCave.Equals("1")||RtaCave.Equals("2"))</mca:CSharpValue>
                                                            </Transition.Condition>
                                                          </Transition>
                                                        </State.Transitions>
                                                      </State>
                                                    </Transition.To>
                                                    <Transition.Action>
                                                      <Sequence DisplayName="Agregar Nueva" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                        <Assign DisplayName="Posicion de la nueva Bandera" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="sd:PointF">
                                                              <mca:CSharpReference x:TypeArguments="sd:PointF">BanderaSeleccionadaPos</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="sd:PointF">
                                                              <mca:CSharpValue x:TypeArguments="sd:PointF">Coordenadas</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <If sap2010:WorkflowViewState.IdRef="If_28">
                                                          <If.Condition>
                                                            <InArgument x:TypeArguments="x:Boolean">
                                                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Color.Length)&lt;0</mca:CSharpValue>
                                                            </InArgument>
                                                          </If.Condition>
                                                          <If.Then>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_27">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"A{ \"id\":\"" + Cursor + "\", \"color\":\"" + Color[Iteracion] + "\", \"x\":\"" + Coordenadas.X.ToString(System.Globalization.CultureInfo.InvariantCulture).Replace(",", ".") + "\", \"y\":\"" + Coordenadas.Y.ToString(System.Globalization.CultureInfo.InvariantCulture).Replace(",", ".") + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Then>
                                                          <If.Else>
                                                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_59">
                                                              <InArgument x:TypeArguments="x:String">
                                                                <mca:CSharpValue x:TypeArguments="x:String">"A{ \"id\":\"" + Cursor + "\", \"color\":\"rojo\", \"x\":\"" + Coordenadas.X.ToString(System.Globalization.CultureInfo.InvariantCulture).Replace(",", ".") + "\", \"y\":\"" + Coordenadas.Y.ToString(System.Globalization.CultureInfo.InvariantCulture).Replace(",", ".") + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                              </InArgument>
                                                            </WriteLine>
                                                          </If.Else>
                                                        </If>
                                                        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_28" Text="hide_question" />
                                                        <Delay sap2010:WorkflowViewState.IdRef="Delay_5">
                                                          <InArgument x:TypeArguments="x:TimeSpan">
                                                            <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
                                                          </InArgument>
                                                        </Delay>
                                                        <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_29">
                                                          <InArgument x:TypeArguments="x:String">
                                                            <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Confirma la posicion: Y(si) o X(no)\" }"</mca:CSharpValue>
                                                          </InArgument>
                                                        </WriteLine>
                                                      </Sequence>
                                                    </Transition.Action>
                                                    <Transition.Condition>
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RtaCave.Equals("2")</mca:CSharpValue>
                                                    </Transition.Condition>
                                                  </Transition>
                                                  <Transition Trigger="{x:Reference __ReferenceID11}" DisplayName="" sap2010:WorkflowViewState.IdRef="Transition_20" To="{x:Reference __ReferenceID8}">
                                                    <Transition.Condition>
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">!RtaCave.Equals("2")</mca:CSharpValue>
                                                    </Transition.Condition>
                                                  </Transition>
                                                </State.Transitions>
                                              </State>
                                            </Transition.To>
                                            <Transition.Action>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_24">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Coloca la bandera\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <Delay sap2010:WorkflowViewState.IdRef="Delay_4">
                                                  <InArgument x:TypeArguments="x:TimeSpan">
                                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(4)</mca:CSharpValue>
                                                  </InArgument>
                                                </Delay>
                                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="hide_question" />
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_26">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"Q{ \"text\":\"Pulsa Y en la posicion\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpReference x:TypeArguments="x:Int32">Cursor</mca:CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpValue x:TypeArguments="x:Int32">BanderaNueva</mca:CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_72">
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">"O{ \"x\":\"0\", \"y\":\"0\", \"radius\":\""+Radio+"\" }"</mca:CSharpValue>
                                                  </InArgument>
                                                </WriteLine>
                                              </Sequence>
                                            </Transition.Action>
                                            <Transition.Condition>
                                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(Protocolo.Length) &lt; 0 &amp;&amp; Protocolo[Iteracion].Equals(3)</mca:CSharpValue>
                                            </Transition.Condition>
                                          </Transition>
                                        </State.Transitions>
                                      </State>
                                    </Transition.To>
                                    <Transition.Action>
                                      <Sequence DisplayName="Termino de recolectar el par" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpReference x:TypeArguments="x:Int32">IRecoleccion</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Sequence DisplayName="Salida" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String">"Inicio test memoria;" + DateTime.Now.ToString()</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_31">
                                            <AddToCollection.Item>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection.Item>
                                            <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                            </InArgument>
                                          </AddToCollection>
                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_90">
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                        </Sequence>
                                      </Sequence>
                                    </Transition.Action>
                                    <Transition.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Math.Sqrt(Math.Pow(Coordenadas.X - Cruz.X, 2) + Math.Pow(Coordenadas.Y - Cruz.Y, 2))) &lt; Cercania) &amp;&amp; (IRecoleccion.Equals(2)||(TrainingFlag.Equals("P")))</mca:CSharpValue>
                                    </Transition.Condition>
                                  </Transition>
                                  <Transition Trigger="{x:Reference __ReferenceID12}" DisplayName="Recolectar Una Mas" sap2010:WorkflowViewState.IdRef="Transition_8" To="{x:Reference __ReferenceID13}">
                                    <Transition.Action>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_80">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String">"Hora Centro;" + DateTime.Now.ToString()</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_32">
                                            <AddToCollection.Item>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection.Item>
                                            <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                            </InArgument>
                                          </AddToCollection>
                                          <WriteLine DisplayName="Pantalla" sap2010:WorkflowViewState.IdRef="WriteLine_87">
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                        </Sequence>
                                        <If DisplayName="Cuando hay que mostrar de a una bandera" sap2010:WorkflowViewState.IdRef="If_10">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <mca:CSharpValue x:TypeArguments="x:Boolean">AparecePar[Iteracion].Equals("N")</mca:CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <If.Then>
                                            <Sequence DisplayName="Mostrar bandera derecha" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                              <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_8">
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idDerecha + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                                </InArgument>
                                              </WriteLine>
                                              <Assign DisplayName="Ponerla Visible" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[1]</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                        <Sequence DisplayName="Cambiar la Cruz de Color" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_61">
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"X{ \"value\":\"rojo\" }"</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                          <Delay sap2010:WorkflowViewState.IdRef="Delay_9">
                                            <InArgument x:TypeArguments="x:TimeSpan">
                                              <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(1);</mca:CSharpValue>
                                            </InArgument>
                                          </Delay>
                                          <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_62">
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"X{ \"value\":\"negro\" }"</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                        </Sequence>
                                      </Sequence>
                                    </Transition.Action>
                                    <Transition.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Math.Sqrt(Math.Pow(Coordenadas.X - Cruz.X, 2) + Math.Pow(Coordenadas.Y - Cruz.Y, 2))) &lt; Cercania) &amp;&amp; (IRecoleccion.CompareTo(2) &lt; 0 &amp;&amp;(TrainingFlag.Equals("T")))</mca:CSharpValue>
                                    </Transition.Condition>
                                  </Transition>
                                  <Transition Trigger="{x:Reference __ReferenceID12}" DisplayName="No paso por el centro" sap2010:WorkflowViewState.IdRef="Transition_10" To="{x:Reference __ReferenceID14}">
                                    <Transition.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">!((Math.Sqrt(Math.Pow(Coordenadas.X - Cruz.X, 2) + Math.Pow(Coordenadas.Y - Cruz.Y, 2))) &lt; Cercania)</mca:CSharpValue>
                                    </Transition.Condition>
                                  </Transition>
                                  <Transition Trigger="{x:Reference __ReferenceID12}" DisplayName="Terminar sin test de memoria" sap2010:WorkflowViewState.IdRef="Transition_24" To="{x:Reference __ReferenceID15}">
                                    <Transition.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Math.Sqrt(Math.Pow(Coordenadas.X - Cruz.X, 2) + Math.Pow(Coordenadas.Y - Cruz.Y, 2))) &lt; Cercania) &amp;&amp; (IRecoleccion.Equals(2)) &amp;&amp; (Iteracion.CompareTo(Evaluar.Length) &lt; 0 &amp;&amp; Evaluar[Iteracion].Equals(2))</mca:CSharpValue>
                                    </Transition.Condition>
                                  </Transition>
                                </State.Transitions>
                              </State>
                            </Transition.To>
                            <Transition.Action>
                              <Sequence DisplayName="Recolectar" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">IRecoleccion</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpValue x:TypeArguments="x:Int32">IRecoleccion+1</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If sap2010:WorkflowViewState.IdRef="If_8">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">(ParBanderasVisible[0].Equals(1) &amp;&amp; ((Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idIzquierda).X, 2) + Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idIzquierda).Y, 2))) &lt; Cercania))</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                      <Assign DisplayName="Oculatar Bandera Izquierda" sap2010:WorkflowViewState.IdRef="Assign_20">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[0]</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_6">
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idIzquierda + "\", \"visible\":\"false\" }"</mca:CSharpValue>
                                        </InArgument>
                                      </WriteLine>
                                      <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_78">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"Captura Bandera;" + idIzquierda + "\n" + "Hora;" + DateTime.Now.ToString()</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_28">
                                          <AddToCollection.Item>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                            </InArgument>
                                          </AddToCollection.Item>
                                          <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                          </InArgument>
                                        </AddToCollection>
                                      </Sequence>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <If sap2010:WorkflowViewState.IdRef="If_7">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(ParBanderasVisible[1].Equals(1) &amp;&amp; (Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idDerecha).X, 2)+ Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idDerecha).Y, 2))) &lt; Cercania)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                          <Assign DisplayName="Oculatar Bandera Izquierda" sap2010:WorkflowViewState.IdRef="Assign_21">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[1]</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_7">
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idDerecha + "\", \"visible\":\"false\" }"</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                          <Sequence DisplayName="Salidas" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"Captura Bandera;" + idDerecha + "\n"
                + "Hora;" + DateTime.Now.ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="x:String" DisplayName="Reporte" sap2010:WorkflowViewState.IdRef="AddToCollection`1_29">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Reporte</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean">(ParBanderasVisible[0].Equals(1) &amp;&amp; ((Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idIzquierda).X, 2) + Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idIzquierda).Y, 2))) &lt; Cercania)) || (ParBanderasVisible[1].Equals(1) &amp;&amp; (Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idDerecha).X, 2) + Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idDerecha).Y, 2))) &lt; Cercania)</mca:CSharpValue>
                            </Transition.Condition>
                          </Transition>
                          <Transition Trigger="{x:Reference __ReferenceID16}" DisplayName="No recolecto" sap2010:WorkflowViewState.IdRef="Transition_7" To="{x:Reference __ReferenceID13}">
                            <Transition.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean">!((ParBanderasVisible[0].Equals(1) &amp;&amp; ((Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idIzquierda).X, 2) - Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idIzquierda).Y, 2))) &lt; Cercania)) || (ParBanderasVisible[1].Equals(1) &amp;&amp; (Math.Sqrt(Math.Pow(Coordenadas.X - BanderasCircunferencia.ElementAt(idDerecha).X, 2) - Math.Pow(Coordenadas.Y - BanderasCircunferencia.ElementAt(idDerecha).Y, 2))) &lt; Cercania))</mca:CSharpValue>
                            </Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <If sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Iteracion.CompareTo(AparecePar.Length)&lt;0 &amp;&amp; AparecePar[Iteracion].Equals("S") &amp;&amp; !TrainingFlag.Equals("P")</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_3">
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idIzquierda + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_4">
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idDerecha + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <Sequence DisplayName="Visible Invisible" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Int32[]">
                                      <mca:CSharpReference x:TypeArguments="s:Int32[]">ParBanderasVisible</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Int32[]">
                                      <mca:CSharpValue x:TypeArguments="s:Int32[]">new int [2]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[0]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[1]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <WriteLine DisplayName="WriteLine" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"H{ \"id\":\"" + idIzquierda + "\", \"visible\":\"true\" }"</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <Sequence DisplayName="Visible Invisible" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Int32[]">
                                      <mca:CSharpReference x:TypeArguments="s:Int32[]">ParBanderasVisible</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Int32[]">
                                      <mca:CSharpValue x:TypeArguments="s:Int32[]">new int [2]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[0]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">ParBanderasVisible[1]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_75">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";NULL;NULL;NULL;REC"</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_48">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                        <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_84">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </Sequence>
                    </Transition.Action>
                    <Transition.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Iteracion.CompareTo(Evaluar.Length)&lt;0)&amp;&amp;(Evaluar[Iteracion].Equals(1) || Evaluar[Iteracion].Equals(2)))||(TrainingFlag.Equals("P"))</mca:CSharpValue>
                    </Transition.Condition>
                  </Transition>
                  <Transition Trigger="{x:Reference __ReferenceID17}" DisplayName="Solo evaluar" sap2010:WorkflowViewState.IdRef="Transition_25" To="{x:Reference __ReferenceID18}">
                    <Transition.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">TrainingFlag.Equals("T")&amp;&amp; Iteracion.CompareTo(Evaluar.Length)&lt;0 &amp;&amp; Evaluar[Iteracion].Equals(3)</mca:CSharpValue>
                    </Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_76">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">Agregar180</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_73">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String">Mensaje</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">DateTime.Now.ToString() + ";" + Coordenadas.X + ";" + Coordenadas.Y + ";NULL;NULL;NULL;INI"</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <AddToCollection x:TypeArguments="x:String" DisplayName="Recorrido" sap2010:WorkflowViewState.IdRef="AddToCollection`1_37">
                  <AddToCollection.Item>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection.Item>
                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">Recorrido</mca:CSharpValue>
                  </InArgument>
                </AddToCollection>
                <WriteLine DisplayName="Mostrar por Consola" sap2010:WorkflowViewState.IdRef="WriteLine_80">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">Mensaje</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
            </Transition.Action>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:Int32" Name="IRecoleccion" />
      <Variable x:TypeArguments="x:Int32" Name="Iteracion" />
      <Variable x:TypeArguments="x:Int32" Name="MaxIteracion" />
      <Variable x:TypeArguments="x:String" Name="RtaCave" />
      <Variable x:TypeArguments="sd:PointF" Name="Coordenadas" />
      <Variable x:TypeArguments="s:Int32[]" Name="ParBanderasVisible" />
      <Variable x:TypeArguments="x:Int32" Name="idIzquierda" />
      <Variable x:TypeArguments="x:Int32" Name="idDerecha" />
      <Variable x:TypeArguments="x:Int32" Name="Cercania" />
      <Variable x:TypeArguments="sd:PointF" Name="Cruz" />
      <Variable x:TypeArguments="x:Int32" Name="Cursor" />
      <Variable x:TypeArguments="sd:PointF" Name="BanderaSeleccionadaPos" />
      <Variable x:TypeArguments="x:Int32" Name="BanderaSeleccionadaID" />
      <Variable x:TypeArguments="x:Int32" Name="idMedio" />
      <Variable x:TypeArguments="x:Int32" Name="BanderaNueva" />
      <Variable x:TypeArguments="x:String" Name="Mensaje" />
      <Variable x:TypeArguments="scg:List(sd:PointF)" Name="PosicionCruz" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d0pDOlxVc2Vyc1xEZWxsUGxhZGVtYVxEZXNrdG9wXEZsYWdDb2xsZWN0b3ItbWFzdGVyXEVqZXJjaWNpb1xFamVyY2ljaW8ueGFtbMsFPwOyFBICAQFBB5AUDwMB+Vj5AQ/oExcDAYhG3wQX2xIfAwHVPqIFH9gRJwMBuTblBSfLEC8DAdMq9Qc/hQhHAwGIKqgGL/AKNwMByCT/Cy/gDTcDAYwciw4vnxA3AwGUF+sGN58KPwMB1wfODjfjDz8DAdUBigg/ughHAgECQwuzARYDAYddtgEL1AEWAwHZW9kBD/YBGgMBzFrrEw+MFBoDAftY+wETqwQeAwH8TK4EE7oEHgMBs0y/BBfcBCIDAaZL3xMX3xPmAQMBhEveEhfcEyIDAaxG5BMX5BPJAQMBikbhBBv9BCYDAdpEggUfnwUqAwHNQ9ISH9ISpgQDAatD2xEfzxIqAwH5PtcSH9cSqQQDAdc+pAUjwAUuAwGnPcUFJ+IFMgMBmjz5ECf5EIwCAwH4O84QJ/YQMgMBpTrKESfKEZ8CAwGDOv4QJ8cRMgMB/zbPESfPEc0BAwHdNtQRJ9QR0AIDAbs25wUrgwY2AwGLNYgGL6UGOgMB/jP6Cy/6C8IBAwHcM/MKL/cLOgMBoC6GDi+GDp8CAwH+LeMNL4MOOgMByyzHEC/HEMQBAwGpLKIQL8QQOgMB1Sr3B0ODCE4DAYoqqgYzxgY+AwHaKMsGN+gGQgMBzSfsCjfsCp4BAwGrJ6IKN+kKQgMByiSBDDOHDD4DAaQkigwzpgw+AwH2IqsMN8gMQgMB6SGhDTehDaABAwHHIc4MN54NQgMBxx7cDTfcDYkBAwGlHqYNN9kNQgMBjhyNDjOpDj4DAd4arg43yw5CAwHRGZYQN5YQiQEDAa8Z5g83kxBCAwG4F5sQN5sQigEDAZYX7QY7zQdGAwGGE9IHP+8HSgMB+RHyBz/yB5ECAwHXEZsKP5sKigIDAbURvQg/mApKAwHZB9AOO+wORgMBqQbxDj+OD0oDAZwFrw8/rw+RAQMB+gSUDz+sD0oDAewD2g8/2g+RAQMBygO0Dz/XD0oDAfkB3w8/3w+pAQMB1wGOCEerCFICAUixCEexCKoCAgEmtghHtgiRAgIBBEQNTxYDAfBgUA1bFgMBq2BcDWUWAwGHYGYNcRYDAcJfcg17FgMBnl98DYcBFgMB2V6IAQ2RARYDAbVekgENnQEWAwHwXZ4BDbIBEgMBiF23AQ3EARYDAcJcxQENyQEZAwGfXMoBDdMBHwMB2lvaARHgASQDAbVb4QER9QEWAwHNWuwTEfATHQMBqVrxExH8ExoDAeRZ/RMRhhQjAwGfWYcUEYsUHQMB/Fj8ARWSAiADAY9YkwIVqgQgAwH9TK8EFbMEIQMB2Uy0BBW4BB0DAbZMuQQVuQRmAwG0TMAEGcYELAMBj0zHBBnbBB4DAadL3xIZwBMeAwHaR8ETGcwTIgMBlUfNExnWEysDAdBG1xMZ2xMlAwGtRuIEHe0EJgMBw0XuBB33BC8DAf5E+AQd/AQpAwHbRIMFIYkFNAMBtkSKBSGeBSYDAc5D3BEh5xEqAwHmQugRIc4SJgMB+j6lBSWwBS4DAZA+sQUlugU3AwHLPbsFJb8FMQMBqD3GBSnMBTwDAYM9zQUp4QUuAwGbPM8QKdgQMgMB1DvZECn1EDQDAaY6/xApmxE0AwHVOJwRKbURLgMB6je2ESnGETQDAYA36AUt8wU2AwH0NfQFLf0FPwMBrzX+BS2CBjkDAYw1iQYxjwZEAwHnNJAGMaQGNgMB/zP0CjH4Cj0DAbkz+Qox/Qo5AwGWM/4KMf4KggEDAZQz/woxgws9AwHxMoQLMfYLNgMBoS7kDTHtDToDAdot7g0x8g09AwG3LfMNMfcNOQMBlC34DTH4DYIBAwGSLfkNMf0NPQMB7yz+DTGCDj0DAcwsoxAxpxA9AwGGLKgQMawQOQMB4yutEDGtEIIBAwHhK64QMbIQPQMBviuzEDG+EDoDAfkqvxAxwxA9AwHWKvgHRfwHUQMBsCr9B0WBCE0DAY0qgghFggiWAQMBiyqrBjW2Bj4DAcMptwY1wAZHAwH+KMEGNcUGQQMB2yjMBjnSBkwDAbYo0wY55wY+AwHOJ6MKOeMKPgMB7iTkCjnoCkUDAcskggw1hgxBAwGlJIsMNZYMPgMB3yOXDDWgDEcDAZojoQw1pQxBAwH3IqwMObIMTAMB0iKzDDnHDD4DAeohzww54ww+AwHeIOQMOZ0NPgMByB6nDTm7DT4DAbwdvA05wA1FAwGZHcENOcwNQgMB1BzNDTnYDUIDAY8cjg41mQ4+AwHHG5oONaMORwMBghukDjWoDkEDAd8arw45tQ5MAwG6GrYOOcoOPgMB0hnnDznyD0IDAeoY8w85hxA+AwGBGIgQOYgQigEDAf8XiRA5jRBBAwHcF44QOZIQRQMBuRfuBj23B0gDAfETuAc9zAdCAwGHE9MHQdkHVAMB4hLaB0HuB0YDAfoRvghB7whGAwHbD/AIQZcKRgMB2gfRDj3cDkYDAZIH3Q495g5PAwHNBucOPesOSQMBqgbyDkH4DlQDAYUG+Q5BjQ9GAwGdBZUPQZUPkgEDAfgElg9Bmg9NAwHVBJsPQZ8PTQMBsgSgD0GrD0oDAe0DtQ9BuQ9NAwGnA7oPQcUPSgMB4gLGD0HRD0oDAZ0C0g9B1g9NAwH6AY8ISZUIXAMBsQGWCEmqCE4CAUlME0xzAwGTYUcTR2oDAfFgWBNYcwMBzmBTE1NsAwGsYGM3YzgDAapgXxNfZAMBiGBuE25sAwHlX2kTaWQDAcNfeTd5OAMBwV91E3VhAwGfX4QBE4QBXQMB/F5/E39kAwHaXo8BN48BOAMB2F6LAROLAWADAbZemgETmgFhAwGTXpUBE5UBXgMB8V2hAROhAWoDAYldpQERsAEaAwGrXb8BE8EBSwMB5Vy6ARO6AWADAcNcxwERxwFWAwGgXNEBEdEBZwMB/VvNARPNAVgDAdtb2gEw2gE5AwHYW90BF90BZAMBtlvkARfkAXQDAc5a6AEV8wEeAwHwWu4TFe4TXQMBqlr5Exf5E7ABAwGHWvQTF/QTZAMB5VmEFBWEFG0DAcJZgBQXgBRcAwGgWYkUFYkUWgMB/Vj9AReRAhwDAZBYlAIXnwIgAwHKV6ACF7QCHAMB4la1Ahf5AhwDAc1U+gIXpQMiAwG3UqYDF6kEHAMB/kyxBBmxBIgBAwHaTLYEGbYEcAMBt0y5BFS5BGMDAbVMwAQ4wARBAwGyTMMEH8MEbAMBkEzKBB/KBHwDAahLzgQd2QQmAwHKS+ISH+IS2wEDAdtH5hIdkxMoAwGvSZYTHb4TKAMB/UfJEx/JE7gBAwG4R8QTH8QTbAMBlkfUEx3UE3UDAfNG0BMf0BNkAwHRRtkTHdkTYgMBrkbqBCPqBK0BAwHmReUEI+UEcAMBxEX1BCH1BHkDAaFF8QQj8QRoAwH/RPoEIfoEZgMB3ESDBUCDBUkDAdlEhgUnhgV0AwG3RI0FJ40FhAEDAc9DkQUlnAUuAwHxQ+QRJ+QRcgMBiUPfESffEXgDAedC6xEn6xHLAgMB+z7vESWXEjADAZNBmhIlzBIqAwGdP60FK60FtQEDAbM+qAUrqAV4AwGRPrgFKbgFgQEDAe49tAUrtAVwAwHMPb0FKb0FbgMBqT3GBUjGBVEDAaY9yQUvyQV8AwGEPdAFL9AFjAEDAZw81AUt3wU2AwG+PNYQU9YQVAMB9zvSEC/SEIABAwHVO9oQK+UQNAMBjzvmECvvED0DAco68BAr9BA3AwGnOoARK4sRNAMBvjmMESuVET0DAfk4lhErmhE3AwHWOJ8RL58RjwEDAes3oxEtsxE4AwGNOLcRK7sRNwMBxze8ESvAETMDAaQ3wRErxRE3AwGBN/AFM/AFvQEDAZc26wUz6wWAAQMB9TX7BTH7BYkBAwHSNfcFM/cFeAMBsDWABjGABnYDAY01iQZQiQZZAwGKNYwGN4wGhAEDAeg0kwY3kwaUAQMBgDSXBjWiBj4DAaI09go19gqaAQMBujP7CjX7CowBAwGXM/4KcP4KfwMBlTOBCzWBC5QBAwHyMocLN4cLlAEDAaIuiws1qQtAAwHDMawLNfQLOgMBxC7rDVvrDVwDAf0t5w035w2CAQMB2y3wDTXwDZoBAwG4LfUNNfUNjAEDAZUt+A1w+A1/AwGTLfsNNfsNmwEDAfAsgA41gA59AwHNLKUQNaUQmAEDAYcsqhA1qhCMAQMB5CutEHCtEH8DAeIrsBA1sBCdAQMBvyu7EDe7EIABAwGcK7YQN7YQggEDAfoqwRA1wRCsAQMB1yr6B0n6B64BAwGxKv8HSf8HoAEDAY4qggiEAYIIkwEDAYwqswY7swbFAQMB5imuBjuuBogBAwHEKb4GOb4GkQEDAaEpugY7ugaAAQMB/yjDBjnDBn4DAdwozAZYzAZhAwHZKM8GP88GjAEDAbco1gY/1gacAQMBzyfaBj3lBkYDAfEnpgo/pgqRAQMB7ySqCj3ECkgDAZ4mxwo94QpIAwGRJeYKPeYKwAEDAcwkhAw5hAyyAQMBpiSTDDuTDMUBAwGCJI4MO44MiAEDAeAjngw5ngyRAQMBvSOaDDuaDIABAwGbI6MMOaMMfgMB+CKsDFisDGEDAfUirww/rwyMAQMB0yK2DD+2DJwBAwHrIboMPcUMRgMBjSLSDD/SDKQBAwHfINYMPdoMSQMBpCHdDD3hDEkDAYEh5ww/5wyRAQMByR7rDD2NDUgDAbAfkA09mw1GAwHrHqoNP6oNpAEDAb0drg09sg1JAwGCHrUNPbkNSQMB3x2+DT2+DZ4BAwGaHckNP8kNpgEDAfccxA0/xA2cAQMB1RzVDT/VDYIBAwGyHNANP9ANmQEDAZAclg47lg7FAQMB6huRDjuRDogBAwHIG6EOOaEOkQEDAaUbnQ47nQ6AAQMBgxumDjmmDn4DAeAarw5Yrw5hAwHdGrIOP7IOjAEDAbsauQ4/uQ6cAQMB0xm9Dj3IDkYDAfUZ7w8/7w+JAQMBjRnqDz/qD5wBAwHrGPYPP/YPpAEDAYIY+g89/g9JAwHHGIEQPYUQSQMBpBiIEHiIEIcBAwGAGIsQPYsQlAEDAd0XkBA9kBCyAQMBuhfvBj+pB0oDAbkUqgc/tQdIAwH0E7YHP7YHkAEDAfITuwdDuweaAQMBiBO/B0HKB0wDAaoT0wdg0wdpAwGFE9YHR9YHlAEDAeMS3QdH3QekAQMB+xHhB0XsB04DAZ0SwQhHwQjsAQMB3A/FCEXtCFADAf4P8whH8wieAQMB2wf3CEWVClADAf0H2Q5D2Q7NAQMBtQfUDkPUDpABAwGTB+QOQeQOmQEDAfAG4A5D4A6IAQMBzgbpDkHpDoYBAwGrBvIOYPIOaQMBqAb1Dkf1DpQBAwGGBvwOR/wOpAEDAZ4FgA9Fiw9OAwHABZUPgAGVD48BAwH5BJgPRZgPwQEDAdYEnQ9FnQ+tAQMBswSoD0eoD4wBAwGQBKMPR6MPkgEDAe4Dtw9Ftw/BAQMBqAPCD0fCD4oBAwGFA70PR70PoQEDAeMCzg9Hzg+MAQMBwALJD0fJD5gBAwGeAtQPRdQPvAEDAfsBjwhojwhxAwHUAZIIT5IInAEDAbIBmQhPmQisAQIBSp0ITagIVgIBbK0BF60BeAMBzl2oAReoAXQDAaxd8AEb8AHSAQMBk1vrARvrAW0DAfFagAIdgALhAQMBkViEAhuIAicDAdZYiwIbjwInAwGzWJwCHZwCjwEDAe1XlwIdlwJtAwHLV6MCHaMCrQEDAeNWpwIbsgIkAwGFV7gCHbgCdAMBzlS8AhvLAiQDAZ1WzgIb9wIgAwHwVPsCGYQDKwMBiFSFAxmJAyUDAeVTigMZlQMiAwGgU5YDGZ8DKwMB21KgAxmkAyUDAbhSqQMdqQPOAQMB/0ytAxvJAyYDAYlRzAMbpwQgAwGhTdYEI9YE2gEDAe1L0QQj0QR1AwHLS+cSH+sSKwMB4UrsEh/wEisDAb5K8RIfkhMqAwGwSZcTH5sTKwMBjEmcEx+9EyoDAf5HmQUrmQXiAQMBlESUBSuUBX0DAfJD8BEn+REwAwHCQvoRJ/4RMwMBn0L/ESeWEjIDAZRBnRIrnRLIAgMBnj+hEinKEjQDAcA/3AUz3AXqAQMB4TzXBTPXBYUBAwG/POIQMeIQnwEDAbI73RAx3RB+AwGQO+0QL+0QhQEDAe066RAx6RB2AwHLOvIQL/IQdAMBqDqIETGIEZcBAwHhOYMRMYMRfgMBvzmTES+TEYUBAwGcOY8RMY8RdgMB+jiYES+YEXQDAdc4pBEvqBE7AwGyOKkRL7IROAMBjji5ES+5EYYBAwHIN74RL74RhwEDAaU3wxEvwxGHAQMBgjefBjufBvIBAwHFNJoGO5oGjQEDAaM0jAs3kAtDAwHOMpELN5wLQAMBiTKdCzeoC0ADAcQxrws7rwuYAQMBxS6zCznRC0QDAZUw1As58gtEAwHnLuIGQ+IG+gEDAZQo3QZD3QaVAQMB8ierCj+0CkgDAYcntQo/vgpRAwHCJr8KP8MKSwMBnybICj/RCkgDAfol0go/2wpRAwG1JdwKP+AKSwMBkiXCDEPCDPoBAwGwIr0MQ70MlQEDAY4i2AxB2AzOAQMBpSHfDEHfDLoBAwGCIewMP/cMSAMBmSD4DD+MDUQDAbEfmA1DmA2rAQMBjh+TDUOTDY4BAwHsHrANQbANzgEDAYMetw1Btw26AQMB4B3FDkPFDvoBAwGYGsAOQ8AOlQEDAfYZ/A9B/A+7AwMByBiDEEGDEKcDAwGlGPAGQf4GSgMBzxb/BkGIB1MDAYoWiQdBjQdNAwHnFY4HQZkHSgMBohWaB0GjB1MDAd0UpAdBqAdNAwG6FLIHRbIHjQEDAZcUrQdFrQeTAQMB9RO2B362B40BAwHzE8AHQ8QHTwMBzhPFB0PJB0sDAasT6QdL6QeCAgMBwBLkB0vkB50BAwGeEskIR9IIUAMBkBHTCEfsCE8DAf8P+AhHjgpSAwGjCI8KR48KmQEDAaEIkApHlApTAwH+B4gPS4gPggIDAeMFgw9Lgw+dAQMBwQWlCFOlCIoCAwGPAaAIU6AIpQECAW2GAh+GAnMDAddYjQIfjQKHAQMBtFivAiGvAqcBAwGoV6oCIaoCbwMBhlfEAiHIAqoDAwHAVr8CIb8CbgMBnlbRAiHRAowBAwHxVNUCH+QCKAMB2FXnAh/1AigDAZNVggMdggNzAwGrVP4CH/4CZAMBiVSHAx2HA2IDAeZTkgMfkgOpAQMBw1ONAx+NA2wDAaFTnQMdnQN1AwH+UpkDH5kDZAMB3FKiAx2iA2IDAblSrgMduQMmAwHyUboDHcMDLwMBrVHEAx3IAykDAYpRzwMhzwO0AQMBok3TAx/vAyoDAdtP8gMfpQQqAwHETekSI+kSnAEDAeJK7hIj7hKaAQMBv0ryEiH9EioDAflJ/hIhhxMqAwHVSYgTIZETKgMBsUmZEyOZE5wBAwGNSZ0TIagTKgMBx0ipEyGyEyoDAaNIsxMhvBMqAwH/R/cRUfcRUgMB5ULzES3zEYcBAwHDQvwRK/wRpQEDAaBCgBIpixIyAwHaQYwSKZUSOwMBlUGiEiurEjQDAe9ArBIrsBI3AwHMQLESK8kSNgMBwT+mETOmEaoBAwGzOLARWbARWgMBsTisETWsEY8BAwGPOI4LO44LswEDAc8ymQs9mQupAQMBrDKUCz2UC5oBAwGKMqULPaULhQEDAecxoAs9oAuXAQMBxTG0Czu4C0cDAaAxuQs7xAtEAwHbMMULO9ALRAMBljDVCzvZC0cDAfIv2gs75QtEAwGtL+YLO/ELRAMB6C6yCmqyCnYDAaonrgpFrgqSAQMBiCe8CkO8CpkBAwHlJrgKRbgKigEDAcMmwQpDwQqIAQMBoCbPCmrPCnYDAZ0mywpFywqSAQMB+yXZCkPZCpkBAwHYJdUKRdUKigEDAbYl3gpD3gqIAQMBkyX0DEX0DK0BAwG8IO8MRe8MkAEDAZog+wxF+wyPAQMBsh//DEOKDUwDAdQf+AZH+wZdAwHyFvMGR/MGlAEDAdAWhgdFhgebAQMBrRaCB0eCB4wBAwGLFosHRYsHigEDAegVlgdHlgfRAQMBxRWRB0eRB5QBAwGjFaEHRaEHnQEDAYAVnQdHnQeMAQMB3hSmB0WmB4oBAwG7FMIHR8IHrgEDAc8TxwdHxweeAQMBrBPQCHHQCHIDAbQRzAhNzAiTAQMBkRHXCEnrCFQDAaMQ1QhL1QirAQMBgBCACUmLCVIDAYwPjAlJlwlSAwG9DpgJSaMJUgMB7g2kCUmvCVIDAZ8NsAlJzglRAwHYC88JSdgJWwMBiQvZCUnkCVIDAboK5QlJ8AlSAwHrCfEJSY0KVAMBpAiPCocBjwqWAQMBogiSCkuSCroBAwH/B90CJeECWwMB+1XYAiXYAnIDAdlV7wIl8gJbAwG2VeoCJeoCcgMBlFW2AyO2A5MCAwGVUrEDI7EDcAMB81HBAyHBA3cDAdBRvQMjvQNoAwGuUcYDIcYDZgMBi1HUAyHfAyoDAcRQ4AMh6QMzAwH/T+oDIe4DLQMB3E/zAyGHBCYDAfNOiAQhpAQsAwHFTfoSJ/oScQMBnEr1Eif1EoABAwH6SYUTS4UTTAMB+EmBEyeBE4EBAwHWSY8TS48TTAMB1EmLEyeLE4EBAwGySaUTJ6UTcQMB6kigEyegE4ABAwHISLATS7ATTAMBxkisEyesE4EBAwGkSLoTS7oTTAMBoki2Eye2E4EBAwGASIgSL4gSuAEDAf1BgxIvgxJ8AwHbQZMSLZMSgwEDAbhBjxIvjxJ0AwGWQakSVakSVgMBkkGlEjGlEosBAwHwQK4SL64SpwEDAc1AshItvhI2AwGHQL8SLcgSPwMBwj+2Cz+2C7YBAwGhMcELQcELqwEDAf4wvAtBvAueAQMB3DDNC0HNC4cBAwG5MMgLQcgLmwEDAZcw1ws/1wuyAQMB8y/iC0HiC6kBAwHQL90LQd0LngEDAa4v7gtB7guFAQMBiy/pC0HpC5sBAwHpLocNSYcNpAEDAfcfgg1Jgg2UAQMB1R/YCEveCFYDAesQ3whL6ghUAwGkEIgJT4gJmQEDAbQPgwlPgwmcAQMBjQ+UCU+UCZkBAwHlDo8JT48JnAEDAb4OoAlPoAmgAQMBlg6bCU+bCZkBAwHvDawJT6wJoQEDAccNpwlPpwmZAQMBoA20CUvNCVYDAYAMsglNsgmKAgMB2QvWCU3WCakBAwGxC9IJT9IJkgEDAYoL4QlP4QmSAQMB4grcCU/cCZsBAwG7Cu0JT+0JkgEDAZMK6AlP6AmbAQMB7AnyCUv9CVQDAZwJ/glLhwpdAwHNCIgKS4wKVwMBpQjcAyfcA5ECAwHnUNcDJ9cDdAMBxVDnAyXnA3sDAaJQ4wMn4wNsAwGAUOwDJewDagMB3U/2Ayf2A40BAwH0TvoDJYUELgMBlk+JBCOUBCwDAa5OlQQjngQ1AwHpTZ8EI6MELwMBxk26EjO7EkYDAapAtRIztRKAAQMBiEDGEjHGEocBAwHlP8ISM8ISeAMBwz/ZCE3dCFkDAewQ5whR5wiRAQMByBDiCFHiCJcBAwGlELUJTcAJVgMB0AzBCU3MCVYDAYEM+glR+gmuAQMBxAn1CVH1CZ4BAwGdCYUKT4UKpQEDAfUIgQpRgQqWAQMBzgiKCk+KCpQBAwGmCIIEK4IEtQEDAblP/QMr/QN3AwGXT5EEKZEEjQIDAdFOjAQpjAR2AwGvTpwEJ5wEfQMBjE6YBCmYBG4DAepNoQQnoQRsAwHHTdsIUdsI2QEDAe0QvQlTvQmkAQMB+Ay4CVO4CZ0BAwHRDMkJU8kJpAEDAakMxAlTxAmdAQMBggw=</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_109" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="464,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="486,1152">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_77" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_12" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_34" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="WriteLine_35" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="798,336">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="776,62" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="776,212" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="509,212" />
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="776,362" />
      <sap2010:ViewStateData Id="AddToCollection`1_13" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_85" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_39" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_78" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="776,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_53" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_98" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_54" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_99" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_55" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_100" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="464,210">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_35" sap:VirtualizedContainerService.HintSize="776,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="798,1471">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="820,1971">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_74" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Delay_12" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="WriteLine_75" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="233,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_13" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_76" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_40" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_83" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_14" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_41" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_86" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_15" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_42" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_88" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_17" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_43" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_89" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_19" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_34" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_96" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_44" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_97" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="264,616">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="WriteLine_23" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="464,944">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_102" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Delay_13" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="233,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_38" sap:VirtualizedContainerService.HintSize="464,398" />
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="486,1506">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_23" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_39" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_19" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="WriteLine_20" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="233,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">903,9.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_18" sap:VirtualizedContainerService.HintSize="768,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">653,46.1 653,0 804,0 804,70.5 914.4,70.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">45</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">7</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_24" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_27" sap:VirtualizedContainerService.HintSize="917,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">303,179.15 273,179.15 273,196.95 147,196.95</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_28" sap:VirtualizedContainerService.HintSize="788,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">303,179.15 273,179.15 273,109.5 354.3,109.5 354.3,139.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_12" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">303,139.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="WriteLine_67" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="325,108" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="325,62" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="347,334">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="464,494" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="486,720">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_30" sap:VirtualizedContainerService.HintSize="668,870" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_96" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,448" />
      <sap2010:ViewStateData Id="AddToCollection`1_56" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_57" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_106" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_97" sap:VirtualizedContainerService.HintSize="464,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="486,1636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_104" sap:VirtualizedContainerService.HintSize="486,62" />
      <sap2010:ViewStateData Id="WriteLine_105" sap:VirtualizedContainerService.HintSize="486,62" />
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="508,1964">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="668,2114" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="690,3148">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_17" sap:VirtualizedContainerService.HintSize="773,3911">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">653,46.1 371.4,46.1 371.4,139.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">45</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_10" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">653,9.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">100</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_86" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_51" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_93" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_87" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_52" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_94" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="WriteLine_57" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="486,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_23" sap:VirtualizedContainerService.HintSize="569,1171">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">935.7,229.5 935.7,173.5 924,173.5 924,105.04 749.9,105.04 749.9,70.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">42</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">67</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_7" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">873,229.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_51" sap:VirtualizedContainerService.HintSize="842,62" />
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="842,22" />
      <sap2010:ViewStateData Id="WriteLine_52" sap:VirtualizedContainerService.HintSize="842,62" />
      <sap2010:ViewStateData Id="WriteLine_53" sap:VirtualizedContainerService.HintSize="842,62" />
      <sap2010:ViewStateData Id="WriteLine_54" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_55" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_56" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="553,540" />
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="842,690" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="864,1182">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_11" sap:VirtualizedContainerService.HintSize="947,1973">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">728.6,379.5 728.6,349.5 918.6,349.5 918.6,290.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">30</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">31</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="233,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_49" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_91" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_11" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_58" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="753,212" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="486,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="753,588" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="775,964">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_15" sap:VirtualizedContainerService.HintSize="858,1727">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">729.25,199.5 729.25,169.5 754.25,169.5 754.25,199.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">34</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="WriteLine_60" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="486,642">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_14" sap:VirtualizedContainerService.HintSize="569,1405">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">729.25,199.5 729.25,169.5 721.4,169.5 721.4,70.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">34</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">47</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_8" sap:VirtualizedContainerService.HintSize="125,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">673,199.5</av:Point>
            <av:Size x:Key="ShapeSize">125,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">111</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_10" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="264,656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_12" sap:VirtualizedContainerService.HintSize="923,1447">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">728.6,379.5 728.6,349.5 729.25,349.5 729.25,260.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">30</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_85" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_50" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_92" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_21" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_47" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_95" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadString_18" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="486,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_63" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_32" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_64" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="264,492">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_21" sap:VirtualizedContainerService.HintSize="528,1283">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">577,142.2 607,142.2 607,290 577,290</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">52</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_33" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_73" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="264,492">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_22" sap:VirtualizedContainerService.HintSize="528,1283">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">577,142.2 602,142.2 602,118.04 666,118.04 666,105.5 704.3,105.5 704.3,70.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">52</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_26" sap:VirtualizedContainerService.HintSize="528,901">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">577,142.2 597.1,142.2 597.1,190.5 537.1,190.5 537.1,160.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">52</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">51</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_11" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">463,99.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">100</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="WriteLine_27" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="WriteLine_59" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="WriteLine_28" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Delay_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteLine_29" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="486,704">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_19" sap:VirtualizedContainerService.HintSize="569,1467">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">520,259.5 520,160.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">38</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_20" sap:VirtualizedContainerService.HintSize="528,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">520,259.5 520,236.1 433,236.1 433,296.1 463,296.1</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">38</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">45</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_9" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">463,259.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_24" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Delay_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_25" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_26" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_72" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="264,656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_13" sap:VirtualizedContainerService.HintSize="528,1447">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">728.6,379.5 728.6,349.5 548.5,349.5 548.5,320.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">30</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">59</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">683,379.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_31" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_90" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="286,576">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="923,1395">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">437,420 467,420 467,410 683,410</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_32" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_87" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,438" />
      <sap2010:ViewStateData Id="WriteLine_61" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Delay_9" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="WriteLine_62" sap:VirtualizedContainerService.HintSize="211,62" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="486,744">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_8" sap:VirtualizedContainerService.HintSize="989,1563">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">437,420 465.6,420 465.6,359.5 135.6,359.5 135.6,389.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">70</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_10" sap:VirtualizedContainerService.HintSize="632,929">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">437,420 462.8,420 462.8,480.5 402.8,480.5 402.8,450.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">55</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_24" sap:VirtualizedContainerService.HintSize="1202,929">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">437,420 542,420 542,494.04 1043,494.04 1043,46.1 1017,46.1</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">44</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">323,389.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="753,62" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_28" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="264,379">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_29" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="264,379">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,529" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="753,679" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="775,905">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="2467,1668">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">147,420 323,420</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="2472,1933">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">147,420 168.6,420 168.6,480.5 78.6,480.5 78.6,450.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">31</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">33,389.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">100</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="286,718">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="264,62" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="286,616">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="597,868" />
      <sap2010:ViewStateData Id="Assign_75" sap:VirtualizedContainerService.HintSize="597,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_48" sap:VirtualizedContainerService.HintSize="597,22" />
      <sap2010:ViewStateData Id="WriteLine_84" sap:VirtualizedContainerService.HintSize="597,62" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="619,1258">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="777,2021">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,230.5 90,389.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_25" sap:VirtualizedContainerService.HintSize="613,873">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,230.5 232,230.5 232,341.04 500,341.04 500,394.75 683,394.75</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">17</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_5" sap:VirtualizedContainerService.HintSize="114,61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">33,169.5</av:Point>
            <av:Size x:Key="ShapeSize">114,61</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_76" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_37" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_80" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="264,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="528,1187">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,71 90,169.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_6" sap:VirtualizedContainerService.HintSize="115,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">32.5,9</av:Point>
            <av:Size x:Key="ShapeSize">115,62</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">101</x:Double>
            <x:Double x:Key="StateContainerHeight">26.079999999999984</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="1061,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <x:Double x:Key="StateContainerWidth">1047</x:Double>
            <x:Double x:Key="StateContainerHeight">600</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">270,40 147.5,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Ejercicio.Ejercicio_1" sap:VirtualizedContainerService.HintSize="1101,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>